name: Build

on:
  push:
    branches:
      - main

concurrency:
  group: build-action-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Lint Check
        run: ./gradlew lintDebug

      - name: Upload Lint Reports
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: '**/build/reports/lint-results-*.html'

  unit-test:
    needs: lint-check
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Test
        run: ./gradlew testDebugUnitTest

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-reports
          path: '**/build/reports/tests'

  instrumented-test:
    needs: lint-check
    name: Instrumented Test
    runs-on: macOS-latest
    strategy:
      matrix:
        api-level: [ 24, 34 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build Projects Before Running Emulator
        run: ./gradlew packageDebug packageDebugAndroidTest

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest --daemon

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumented-test-reports-${{ matrix.api-level }}
          path: '**/build/reports/androidTests'

  build-apks:
    needs:
      - unit-test
      - instrumented-test
    name: Build APKs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Assemble
        run: ./gradlew assemble

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: '**/build/outputs/apk/**/**.apk'